TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`%` TRIGGER `tri_zam_insert` BEFORE INSERT ON `zamestnanci` FOR EACH ROW BEGIN\n        	IF(TIMESTAMPDIFF(YEAR, NEW.dat_nar, NEW.dat_nas) <= 18) THEN\n             SIGNAL SQLSTATE \'01000\' SET MESSAGE_TEXT = \'Není ti 18 \' , MYSQL_ERRNO = 1000;\n        END IF;\n        IF(TIMESTAMPDIFF(YEAR, NEW.dat_nar, NEW.dat_nas) > 18) THEN\n        	SIGNAL SQLSTATE \'01000\' SET MESSAGE_TEXT = \'Je ti 18 nebo víc\', MYSQL_ERRNO = 1000;\n        END IF;\n    END' 'CREATE DEFINER=`root`@`%` TRIGGER `tri_zamestnanci_insert_before` BEFORE INSERT ON `zamestnanci` FOR EACH ROW BEGIN\n    DECLARE vek INT;\n    DECLARE datumNastupu INT;\n    DECLARE datumNastupuDatumNar INT;\n    \n    SET vek  = TIMESTAMPDIFF(YEAR, NEW.dat_nar, NOW());\n    SET datumNastupu = TIMESTAMPDIFF(DAY, NEW.dat_nas, NOW());\n    SET datumNastupuDatumNar = TIMESTAMPDIFF(YEAR, NEW.dat_nar, NEW.dat_nas);\n    \n    IF vek < 18 THEN\n         SIGNAL SQLSTATE \'45000\' \n        SET MESSAGE_TEXT = \'Uživatel musí být plnoletý pro vytvoření účtu.\';\n    END IF;\n    \n    IF (datumNastupu + 30) < 0 THEN\n    SIGNAL SQLSTATE \'45000\' \n    	 SET MESSAGE_TEXT = \'Zaměstnanec nastupuje moc pozde.\';\n    END IF;\n    \n    IF datumNastupuDatumNar < 18 THEN \n     SIGNAL SQLSTATE \'45000\' \n    	 SET MESSAGE_TEXT = \'Zaměstnanci nebylo v datu nástupu 18 let.\';\n    END IF;\n    END' 'CREATE DEFINER=`root`@`%` TRIGGER `tri_zam_insert_after` AFTER INSERT ON `zamestnanci` FOR EACH ROW BEGIN\n	DECLARE pozice_nazev CHAR(15);\n    DECLARE pozice_plat MEDIUMINT(8);\n    SELECT pozice.nazev INTO pozice_nazev FROM pozice WHERE pozice.id_poz = NEW.id_poz;\n    SELECT pozice.plat INTO pozice_plat FROM pozice WHERE pozice.id_poz = NEW.id_poz;\n    INSERT INTO zamestnanci_nast_odch VALUES(NULL, NEW.id_zam,CONCAT(NEW.jmeno,\' \',NEW.prijmeni), NEW.dat_nas,NEW.adresa,NEW.telefon, NEW.mail, NEW.dat_nar,\n    pozice_nazev, pozice_plat, NEW.odmena, \'nástup\',NOW(), USER());\nEND' 'CREATE DEFINER=`root`@`%` TRIGGER `tri_zamestananci_update_before` BEFORE UPDATE ON `zamestnanci` FOR EACH ROW BEGIN\n\n    DECLARE vek INT;\n    DECLARE datumNastupu INT;\n    DECLARE datumNastupuDatumNar INT;\n    \n    SET vek  = TIMESTAMPDIFF(YEAR, NEW.dat_nar, NOW());\n    SET datumNastupu = TIMESTAMPDIFF(DAY, NEW.dat_nas, NOW());\n    SET datumNastupuDatumNar = TIMESTAMPDIFF(YEAR, OLD.dat_nar, NEW.dat_nas);\n    \n    IF vek < 18 THEN\n         SIGNAL SQLSTATE \'45000\' \n        SET MESSAGE_TEXT = \'Uživatel musí být plnoletý pro vytvoření účtu.\';\n    END IF;\n    \n    IF (datumNastupu + 30) < 0 THEN\n    SIGNAL SQLSTATE \'45000\' \n    	 SET MESSAGE_TEXT = \'Zaměstnanec nastupuje moc pozde.\';\n    END IF;\n    \n    IF datumNastupuDatumNar < 18 THEN \n     SIGNAL SQLSTATE \'45000\' \n    	 SET MESSAGE_TEXT = \'Zaměstnanci nebylo v datu nástupu 18 let.\';\n    END IF;\n  \nEND' 'CREATE DEFINER=`root`@`%` TRIGGER `tri_zam_update_after` AFTER UPDATE ON `zamestnanci` FOR EACH ROW BEGIN\n         IF(OLD.id_zam != NEW.id_zam) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.id_zam, NEW.id_zam , \'ID zaměstnance\', NOW(), USER());\n        END IF;\n                 IF(OLD.jmeno != NEW.jmeno) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.jmeno, NEW.jmeno , \'Jméno\', NOW(), USER());\n        END IF;\n                 IF(OLD.prijmeni != NEW.prijmeni) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.prijmeni, NEW.prijmeni , \'Příjmení\', NOW(), USER());\n        END IF;\n                 IF(OLD.dat_nas != NEW.dat_nas) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.dat_nas, NEW.dat_nas , \'Datum nástupu\', NOW(), USER());  \n        END IF;\n                 IF(OLD.adresa != NEW.adresa) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.adresa, NEW.adresa , \'Adresa\', NOW(), USER());\n        END IF;\n                 IF(OLD.telefon != NEW.telefon) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.telefon, NEW.telefon , \'Telefon\', NOW(), USER());\n        END IF;\n                 IF(OLD.mail != NEW.mail) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.mail, NEW.mail , \'Mail\', NOW(), USER());\n        END IF;\n                 IF(OLD.dat_nar != NEW.dat_nar) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.dat_nar, NEW.dat_nar , \'Datum narození\', NOW(), USER());\n        END IF;\n                 IF(OLD.id_poz != NEW.id_poz) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.id_poz, NEW.id_poz , \'ID pozice\', NOW(), USER());\n        END IF;\n                 IF(OLD.odmena != NEW.odmena) THEN\n        INSERT INTO zamestnanci_zmeny VALUES(id_zme, OLD.id_zam, OLD.odmena, NEW.odmena , \'Odměna\', NOW(), USER());\n         END IF;\n	END' 'CREATE DEFINER=`root`@`%` TRIGGER `tri_zam_delete_before` BEFORE DELETE ON `zamestnanci` FOR EACH ROW BEGIN\n	DECLARE pozice_nazev CHAR(15);\n    DECLARE pozice_plat MEDIUMINT(8);\n    SELECT pozice.nazev INTO pozice_nazev FROM pozice WHERE pozice.id_poz = OLD.id_poz;\n    SELECT pozice.plat INTO pozice_plat FROM pozice WHERE pozice.id_poz = OLD.id_poz;\n    INSERT INTO zamestnanci_nast_odch VALUES(NULL, OLD.id_zam,CONCAT(OLD.jmeno,\' \',OLD.prijmeni), OLD.dat_nas,OLD.adresa,OLD.telefon, OLD.mail, OLD.dat_nar,\n    pozice_nazev, pozice_plat, OLD.odmena, \'odchod\',NOW(), USER());\nEND'
sql_modes=524288 524288 524288 524288 524288 524288
definers='root@%' 'root@%' 'root@%' 'root@%' 'root@%' 'root@%'
client_cs_names='utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4' 'utf8mb4'
connection_cl_names='utf8mb4_uca1400_ai_ci' 'utf8mb4_uca1400_ai_ci' 'utf8mb4_uca1400_ai_ci' 'utf8mb4_uca1400_ai_ci' 'utf8mb4_uca1400_ai_ci' 'utf8mb4_uca1400_ai_ci'
db_cl_names='utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci' 'utf8mb4_general_ci'
created=1729629495953748 1729629496167462 1729629496004631 1729629496110170 1729629496053993 1729629495928376
